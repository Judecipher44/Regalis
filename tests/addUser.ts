import { test, expect } from '@playwright/test';

test.only('add user manager', async ({ page }) => {
    await page.goto('https://dev.regalis.app/');
    await expect(page.getByText ('メールアドレス')).toBeVisible();
    await page.getByPlaceholder('メールアドレスを入力する').isVisible();
    await page.getByPlaceholder('メールアドレスを入力する').click();
    await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
    await expect (page.getByText('パスワード', { exact: true })).toBeVisible();
  await page.getByPlaceholder('パスワードを入力する').fill('Test@123!');
  await page.getByRole('button', { name: 'ログイン' }).click();
  await page.getByText('マスタメンテナンス').isVisible();
  await page.getByText('マスタメンテナンス').click();
  await page.getByText('ユーザーアカウント').isVisible();
  await page.getByText('ユーザーアカウント').click();
  await page.getByRole('heading', { name: 'ユーザーリスト' }).isVisible();
  await page.getByRole('button', { name: 'plus ユーザー作成' }).click();
  await page.getByPlaceholder('名前(姓)を入力する').isVisible();
  await page.getByPlaceholder('名前(姓)を入力する').click();
  await page.getByPlaceholder('名前(姓)を入力する').fill('test');
  await page.getByPlaceholder('名前(名)を入力する').isVisible();
  await page.getByPlaceholder('名前(名)を入力する').click();
  await page.getByPlaceholder('名前(名)を入力する').fill('test');
  await page.getByPlaceholder('メールアドレスを入力する').isVisible();
  await page.getByPlaceholder('メールアドレスを入力する').click();
  await page.getByPlaceholder('メールアドレスを入力する').fill('test@gmail.com');
  await page.getByLabel('パスワード', { exact: true }).isVisible();
  await page.getByLabel('パスワード', { exact: true }).click();
  await page.getByLabel('パスワード', { exact: true }).fill('Test@123!');
  await page.getByLabel('パスワードの再入力').isVisible();
  await page.getByLabel('パスワードの再入力').click();
  await page.getByLabel('パスワードの再入力').fill('Test@123!');
  await page.getByLabel('アカウントタイプ').isVisible();
  await page.getByLabel('アカウントタイプ').click();
  await page.getByText('管理者').isVisible();
  await page.getByText('管理者').click();
  await page.getByPlaceholder('地位を入力する').isVisible();
  await page.getByPlaceholder('地位を入力する').click();
  await page.getByPlaceholder('地位を入力する').fill('test');
//   await page.getByRole('button', { name: '登 録' }).click();
  await page.close();
  });

  test('add user read only', async ({ page }) => {
    await page.goto('https://dev.regalis.app/');
    await expect(page.getByText ('メールアドレス')).toBeVisible();
    await page.getByPlaceholder('メールアドレスを入力する').isVisible();
    await page.getByPlaceholder('メールアドレスを入力する').click();
    await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
    await expect (page.getByText('パスワード', { exact: true })).toBeVisible();
    await page.getByPlaceholder('パスワードを入力する').fill('Test@123!');
    await page.getByRole('button', { name: 'ログイン' }).click();
    await page.getByText('マスタメンテナンス').isVisible();
    await page.getByText('マスタメンテナンス').click();
    await page.getByText('ユーザーアカウント').isVisible();
    await page.getByText('ユーザーアカウント').click();
    await page.getByRole('heading', { name: 'ユーザーリスト' }).isVisible();
    await page.getByRole('button', { name: 'plus ユーザー作成' }).click();
    await page.getByPlaceholder('名前(姓)を入力する').isVisible();
    await page.getByPlaceholder('名前(姓)を入力する').click();
    await page.getByPlaceholder('名前(姓)を入力する').fill('test');
    await page.getByPlaceholder('名前(名)を入力する').isVisible();
    await page.getByPlaceholder('名前(名)を入力する').click();
    await page.getByPlaceholder('名前(名)を入力する').fill('test');
    await page.getByPlaceholder('メールアドレスを入力する').isVisible();
    await page.getByPlaceholder('メールアドレスを入力する').click();
    await page.getByPlaceholder('メールアドレスを入力する').fill('test@gmail.com');
    await page.getByLabel('パスワード', { exact: true }).isVisible();
    await page.getByLabel('パスワード', { exact: true }).click();
    await page.getByLabel('パスワード', { exact: true }).fill('Test@123!');
    await page.getByLabel('パスワードの再入力').isVisible();
    await page.getByLabel('パスワードの再入力').click();
    await page.getByLabel('パスワードの再入力').fill('Test@123!');
    await page.getByLabel('アカウントタイプ').isVisible();
    await page.getByLabel('アカウントタイプ').click();
    await page.locator('[id="__next"]').getByTitle('読み取り専用').isVisible();
    await page.locator('[id="__next"]').getByTitle('読み取り専用').click();
   await page.getByPlaceholder('地位を入力する').isVisible();
    await page.getByPlaceholder('地位を入力する').click();
    await page.getByPlaceholder('地位を入力する').fill('test');
  //   await page.getByRole('button', { name: '登 録' }).click();
    await page.close();
    });

    test('add user generally', async ({ page }) => {
        await page.goto('https://dev.regalis.app/');
        await expect(page.getByText ('メールアドレス')).toBeVisible();
        await page.getByPlaceholder('メールアドレスを入力する').isVisible();
        await page.getByPlaceholder('メールアドレスを入力する').click();
        await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
        await expect (page.getByText('パスワード', { exact: true })).toBeVisible();
        await page.getByPlaceholder('パスワードを入力する').fill('Test@123!');
        await page.getByRole('button', { name: 'ログイン' }).click();
        await page.getByText('マスタメンテナンス').isVisible();
        await page.getByText('マスタメンテナンス').click();
        await page.getByText('ユーザーアカウント').isVisible();
        await page.getByText('ユーザーアカウント').click();
        await page.getByRole('heading', { name: 'ユーザーリスト' }).isVisible();
        await page.getByRole('button', { name: 'plus ユーザー作成' }).click();
        await page.getByPlaceholder('名前(姓)を入力する').isVisible();
        await page.getByPlaceholder('名前(姓)を入力する').click();
        await page.getByPlaceholder('名前(姓)を入力する').fill('automationtest');
        await page.getByPlaceholder('名前(名)を入力する').isVisible();
        await page.getByPlaceholder('名前(名)を入力する').click();
        await page.getByPlaceholder('名前(名)を入力する').fill('test');
        await page.getByPlaceholder('メールアドレスを入力する').isVisible();
        await page.getByPlaceholder('メールアドレスを入力する').click();
        await page.getByPlaceholder('メールアドレスを入力する').fill('test123456789@gmail.com');
        await page.getByLabel('パスワード', { exact: true }).isVisible();
        await page.getByLabel('パスワード', { exact: true }).click();
        await page.getByLabel('パスワード', { exact: true }).fill('Test@123!');
        await page.getByLabel('パスワードの再入力').isVisible();
        await page.getByLabel('パスワードの再入力').click();
        await page.getByLabel('パスワードの再入力').fill('Test@123!');
        await page.getByLabel('アカウントタイプ').isVisible();
        await page.getByLabel('アカウントタイプ').click();
        await page.getByText('一般', { exact: true }).isVisible();
        await page.getByText('一般', { exact: true }).click();
        await page.getByPlaceholder('地位を入力する').isVisible();
        await page.getByPlaceholder('地位を入力する').click();
       await page.getByPlaceholder('地位を入力する').fill('test');
    //    await page.getByRole('button', { name: 'キャンセル' }).click();
        await page.getByRole('button', { name: '登 録' }).isVisible();
         await page.getByRole('button', { name: '登 録' }).click();
        await page.close();
        });
        
    test('cancel add user', async ({ page }) => {
        await page.goto('https://dev.regalis.app/');
        await expect(page.getByText ('メールアドレス')).toBeVisible();
        await page.getByPlaceholder('メールアドレスを入力する').isVisible();
        await page.getByPlaceholder('メールアドレスを入力する').click();
        await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
        await expect (page.getByText('パスワード', { exact: true })).toBeVisible();
        await page.getByPlaceholder('パスワードを入力する').fill('Test@123!');
        await page.getByRole('button', { name: 'ログイン' }).click();
        await page.getByText('マスタメンテナンス').isVisible();
        await page.getByText('マスタメンテナンス').click();
        await page.getByText('ユーザーアカウント').isVisible();
        await page.getByText('ユーザーアカウント').click();
        await page.getByRole('heading', { name: 'ユーザーリスト' }).isVisible();
        await page.getByRole('button', { name: 'plus ユーザー作成' }).click();
        await page.getByPlaceholder('名前(姓)を入力する').isVisible();
        await page.getByPlaceholder('名前(姓)を入力する').click();
        await page.getByPlaceholder('名前(姓)を入力する').fill('automationtest');
        await page.getByPlaceholder('名前(名)を入力する').isVisible();
        await page.getByPlaceholder('名前(名)を入力する').click();
        await page.getByPlaceholder('名前(名)を入力する').fill('test');
        await page.getByPlaceholder('メールアドレスを入力する').isVisible();
        await page.getByPlaceholder('メールアドレスを入力する').click();
        await page.getByPlaceholder('メールアドレスを入力する').fill('test123456789@gmail.com');
        await page.getByLabel('パスワード', { exact: true }).isVisible();
        await page.getByLabel('パスワード', { exact: true }).click();
        await page.getByLabel('パスワード', { exact: true }).fill('Test@123!');
        await page.getByLabel('パスワードの再入力').isVisible();
        await page.getByLabel('パスワードの再入力').click();
        await page.getByLabel('パスワードの再入力').fill('Test@123!');
        await page.getByLabel('アカウントタイプ').isVisible();
        await page.getByLabel('アカウントタイプ').click();
        await page.getByText('一般', { exact: true }).isVisible();
        await page.getByText('一般', { exact: true }).click();
        await page.getByPlaceholder('地位を入力する').isVisible();
        await page.getByPlaceholder('地位を入力する').click();
       await page.getByPlaceholder('地位を入力する').fill('test');
       await page.getByRole('button', { name: 'キャンセル' }).click();
        await page.close();
        });
        test('email already exist', async ({ page }) => {
            await page.goto('https://dev.regalis.app/');
            await expect(page.getByText ('メールアドレス')).toBeVisible();
            await page.getByPlaceholder('メールアドレスを入力する').isVisible();
            await page.getByPlaceholder('メールアドレスを入力する').click();
            await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
            await expect (page.getByText('パスワード', { exact: true })).toBeVisible();
            await page.getByPlaceholder('パスワードを入力する').fill('Test@123!');
            await page.getByRole('button', { name: 'ログイン' }).click();
            await page.getByText('マスタメンテナンス').isVisible();
            await page.getByText('マスタメンテナンス').click();
            await page.getByText('ユーザーアカウント').isVisible();
            await page.getByText('ユーザーアカウント').click();
            await page.getByRole('heading', { name: 'ユーザーリスト' }).isVisible();
            await page.getByRole('button', { name: 'plus ユーザー作成' }).click();
            await page.getByPlaceholder('名前(姓)を入力する').isVisible();
            await page.getByPlaceholder('名前(姓)を入力する').click();
            await page.getByPlaceholder('名前(姓)を入力する').fill('automationtest');
            await page.getByPlaceholder('名前(名)を入力する').isVisible();
            await page.getByPlaceholder('名前(名)を入力する').click();
            await page.getByPlaceholder('名前(名)を入力する').fill('test');
            await page.getByPlaceholder('メールアドレスを入力する').isVisible();
            await page.getByPlaceholder('メールアドレスを入力する').click();
            await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
            await page.getByText('このメールアドレスは既に登録されています').isVisible();
            await page.close();
            });
            test('invalid email', async ({ page }) => {
                await page.goto('https://dev.regalis.app/');
                await expect(page.getByText ('メールアドレス')).toBeVisible();
                await page.getByPlaceholder('メールアドレスを入力する').isVisible();
                await page.getByPlaceholder('メールアドレスを入力する').click();
                await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
                await expect (page.getByText('パスワード', { exact: true })).toBeVisible();
                await page.getByPlaceholder('パスワードを入力する').fill('Test@123!');
                await page.getByRole('button', { name: 'ログイン' }).click();
                await page.getByText('マスタメンテナンス').isVisible();
                await page.getByText('マスタメンテナンス').click();
                await page.getByText('ユーザーアカウント').isVisible();
                await page.getByText('ユーザーアカウント').click();
                await page.getByRole('heading', { name: 'ユーザーリスト' }).isVisible();
                await page.getByRole('button', { name: 'plus ユーザー作成' }).click();
                await page.getByPlaceholder('名前(姓)を入力する').isVisible();
                await page.getByPlaceholder('名前(姓)を入力する').click();
                await page.getByPlaceholder('名前(姓)を入力する').fill('automationtest');
                await page.getByPlaceholder('名前(名)を入力する').isVisible();
                await page.getByPlaceholder('名前(名)を入力する').click();
                await page.getByPlaceholder('名前(名)を入力する').fill('test');
                await page.getByPlaceholder('メールアドレスを入力する').isVisible();
                await page.getByPlaceholder('メールアドレスを入力する').click();
                await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
                  await page.getByText('有効なEメールアドレスを入力してください').isVisible();
                 await page.close();
                });
                test('password less than 6 characters', async ({ page }) => {
                    await page.goto('https://dev.regalis.app/');
                    await expect(page.getByText ('メールアドレス')).toBeVisible();
                    await page.getByPlaceholder('メールアドレスを入力する').isVisible();
                    await page.getByPlaceholder('メールアドレスを入力する').click();
                    await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
                    await expect (page.getByText('パスワード', { exact: true })).toBeVisible();
                    await page.getByPlaceholder('パスワードを入力する').fill('Test@123!');
                    await page.getByRole('button', { name: 'ログイン' }).click();
                    await page.getByText('マスタメンテナンス').isVisible();
                    await page.getByText('マスタメンテナンス').click();
                    await page.getByText('ユーザーアカウント').isVisible();
                    await page.getByText('ユーザーアカウント').click();
                    await page.getByRole('heading', { name: 'ユーザーリスト' }).isVisible();
                    await page.getByRole('button', { name: 'plus ユーザー作成' }).click();
                    await page.getByPlaceholder('名前(姓)を入力する').isVisible();
                    await page.getByPlaceholder('名前(姓)を入力する').click();
                    await page.getByPlaceholder('名前(姓)を入力する').fill('automationtest');
                    await page.getByPlaceholder('名前(名)を入力する').isVisible();
                    await page.getByPlaceholder('名前(名)を入力する').click();
                    await page.getByPlaceholder('名前(名)を入力する').fill('test');
                    await page.getByPlaceholder('メールアドレスを入力する').isVisible();
                    await page.getByPlaceholder('メールアドレスを入力する').click();
                    await page.getByLabel('パスワード', { exact: true }).isVisible();
                    await page.getByLabel('パスワード', { exact: true }).click();
                    await page.getByLabel('パスワード', { exact: true }).fill('Test');
                    await page.getByText('パスワードは8文字以上であること').isVisible();
                    await page.getByText('パスワードには、少なくとも1つの数字が含まれている必要があります。').isVisible();
                     await page.close();
                    });
                    test('password does not match', async ({ page }) => {
                        await page.goto('https://dev.regalis.app/');
                        await expect(page.getByText ('メールアドレス')).toBeVisible();
                        await page.getByPlaceholder('メールアドレスを入力する').isVisible();
                        await page.getByPlaceholder('メールアドレスを入力する').click();
                        await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
                        await expect (page.getByText('パスワード', { exact: true })).toBeVisible();
                        await page.getByPlaceholder('パスワードを入力する').fill('Test@123!');
                        await page.getByRole('button', { name: 'ログイン' }).click();
                        await page.getByText('マスタメンテナンス').isVisible();
                        await page.getByText('マスタメンテナンス').click();
                        await page.getByText('ユーザーアカウント').isVisible();
                        await page.getByText('ユーザーアカウント').click();
                        await page.getByRole('heading', { name: 'ユーザーリスト' }).isVisible();
                        await page.getByRole('button', { name: 'plus ユーザー作成' }).click();
                        await page.getByPlaceholder('名前(姓)を入力する').isVisible();
                        await page.getByPlaceholder('名前(姓)を入力する').click();
                        await page.getByPlaceholder('名前(姓)を入力する').fill('automationtest');
                        await page.getByPlaceholder('名前(名)を入力する').isVisible();
                        await page.getByPlaceholder('名前(名)を入力する').click();
                        await page.getByPlaceholder('名前(名)を入力する').fill('test');
                        await page.getByPlaceholder('メールアドレスを入力する').isVisible();
                        await page.getByPlaceholder('メールアドレスを入力する').click();
                        await page.getByLabel('パスワード', { exact: true }).isVisible();
                        await page.getByLabel('パスワード', { exact: true }).click();
                        await page.getByLabel('パスワード', { exact: true }).fill('Test');
                        await page.getByLabel('パスワードの再入力').isVisible();
                        await page.getByLabel('パスワードの再入力').click();
                        await page.getByLabel('パスワードの再入力').fill('Test@123!');
                        await page.getByText('パスワードが一致していません。').isVisible()

                         await page.close();
                        });

                        test('empty required fields', async ({ page }) => {
                            await page.goto('https://dev.regalis.app/');
                        await expect(page.getByText ('メールアドレス')).toBeVisible();
                        await page.getByPlaceholder('メールアドレスを入力する').isVisible();
                        await page.getByPlaceholder('メールアドレスを入力する').click();
                        await page.getByPlaceholder('メールアドレスを入力する').fill('shunwasaki144@gmail.com');
                        await expect (page.getByText('パスワード', { exact: true })).toBeVisible();
                          await page.getByPlaceholder('パスワードを入力する').fill('Test@123!');
                          await page.getByRole('button', { name: 'ログイン' }).click();
                          await page.getByText('マスタメンテナンス').isVisible();
                          await page.getByText('マスタメンテナンス').click();
                          await page.getByText('ユーザーアカウント').isVisible();
                          await page.getByText('ユーザーアカウント').click();
                          await page.getByRole('heading', { name: 'ユーザーリスト' }).isVisible();
                          await page.getByRole('button', { name: 'plus ユーザー作成' }).click();
                          await page.getByRole('button', { name: '登 録' }).click();
                          await page.locator('#last_name_help').getByText('入力必須項目です').isVisible();
                          await page.locator('#first_name_help').getByText('入力必須項目です').isVisible();   
                          await page.getByText('有効なEメールアドレスを入力してください').isVisible();
                          await page.locator('#password_help').getByText('入力必須項目です').isVisible();
                          await page.locator('#confirm_password_help').getByText('入力必須項目です').isVisible();
                          await page.locator('#account_type_help').getByText('入力必須項目です').isVisible();
                          await page.locator('#department_help').getByText('入力必須項目です').isVisible();
                          await page.close();
                          });
        
    











